{"version":3,"sources":["Components/Header.js","Components/Form.js","MemeGenerator.js","App.js","index.js"],"names":["Header","className","Form","props","onSubmit","handleSubmit","type","name","onChange","handleChange","placeholder","topText","bottomText","src","randomImg","alt","MemeGenerator","state","allMemesImgs","bind","getRandomInt","fetch","then","response","json","responseJson","data","memesData","setState","memes","max","Math","floor","random","event","target","value","this","preventDefault","length","url","Component","App","React","ReactDOM","render","document","querySelector"],"mappings":"iUAYeA,MATf,WACE,OACE,8BACE,wBAAQC,UAAU,SAAlB,SACE,oBAAIA,UAAU,gBAAd,iC,2BC4BOC,MAhCf,SAAcC,GACZ,OACE,gCACE,uBAAMF,UAAU,iBAAiBG,SAAUD,EAAME,aAAjD,UACE,uBACEC,KAAK,OACLC,KAAK,UACLC,SAAUL,EAAMM,aAChBC,YAAY,aAEd,uBACEJ,KAAK,OACLC,KAAK,aACLC,SAAUL,EAAMM,aAChBC,YAAY,gBAEd,wBAAQT,UAAU,sBAAlB,oBAEF,qBAAKA,UAAU,kBAAf,SACE,0BAASA,UAAU,gBAAnB,UACE,oBAAIA,UAAU,WAAd,SAA0BE,EAAMQ,UAChC,oBAAIV,UAAU,cAAd,SAA6BE,EAAMS,aACnC,qBACEX,UAAU,0BACVY,IAAKV,EAAMW,UACXC,IAAI,cCoBDC,E,kDA5Cb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,aAAc,GACdP,QAAS,GACTC,WAAY,GACZE,UAAW,iCAEb,EAAKL,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAKd,aAAe,EAAKA,aAAac,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVR,E,qDAYd,WAAqB,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAkBA,EAAaC,QACpCJ,MAAK,SAACK,GAAD,OAAe,EAAKC,SAAS,CAAEV,aAAcS,EAAUE,a,0BAEjE,SAAaC,GACX,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,M,0BAE/C,SAAaI,GAAQ,IAAD,EACMA,EAAMC,OAAtB5B,EADU,EACVA,KAAM6B,EADI,EACJA,MACdC,KAAKT,SAAL,eAAiBrB,EAAO6B,M,0BAE1B,SAAaF,GACXA,EAAMI,iBACND,KAAKT,SAAS,CACZd,UAAWuB,KAAKpB,MAAMC,aACpBmB,KAAKjB,aAAaiB,KAAKpB,MAAMC,aAAaqB,SAC1CC,Q,oBAGN,WACE,OACE,cAAC,EAAD,2BACMH,KAAKpB,OADX,IAEER,aAAc4B,KAAK5B,aACnBJ,aAAcgC,KAAKhC,oB,GAvCCoC,aCgBbC,G,kKAVb,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUC,IAAMF,YCHxBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.4fa13feb.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./styles/Header.css\";\nfunction Header() {\n  return (\n    <div>\n      <header className=\"header\">\n        <h1 className=\"header__title\">Meme Generator</h1>\n      </header>\n    </div>\n  );\n}\nexport default Header;\n","import React from \"react\";\n\nimport \"./styles/Form.css\";\nfunction Form(props) {\n  return (\n    <div>\n      <form className=\"main-formulary\" onSubmit={props.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"topText\"\n          onChange={props.handleChange}\n          placeholder=\"Top Text\"\n        />\n        <input\n          type=\"text\"\n          name=\"bottomText\"\n          onChange={props.handleChange}\n          placeholder=\"Bottom Text\"\n        />\n        <button className=\"main-formulary__btn\">GEN</button>\n      </form>\n      <div className=\"main-meme-maker\">\n        <picture className=\"img-container\">\n          <h1 className=\"top-text\">{props.topText}</h1>\n          <h1 className=\"bottom-text\">{props.bottomText}</h1>\n          <img\n            className=\"img-container__meme-img\"\n            src={props.randomImg}\n            alt=\"\"\n          />\n        </picture>\n      </div>\n    </div>\n  );\n}\nexport default Form;\n","import React, { Component } from \"react\";\nimport Form from \"./Components/Form\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allMemesImgs: [],\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getRandomInt = this.getRandomInt.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((responseJson) => responseJson.data)\n      .then((memesData) => this.setState({ allMemesImgs: memesData.memes }));\n  }\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      randomImg: this.state.allMemesImgs[\n        this.getRandomInt(this.state.allMemesImgs.length)\n      ].url,\n    });\n  }\n  render() {\n    return (\n      <Form\n        {...this.state}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default MemeGenerator;\n","import React from \"react\";\n\nimport \"./styles/base.css\";\nimport \"./styles/normalize.css\";\nimport Header from \"./Components/Header\";\nimport MemeGenerator from \"./MemeGenerator\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <MemeGenerator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}